@{
    ViewBag.Title = "View2";
    Layout = null;
}

<!DOCTYPE html>
<html ng-app="myApp">
<head>
    <title>Jay Mahavir</title>
    <link data-require="bootstrap-css@3.1.1" data-semver="3.1.1" rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
    <script data-require="angular.js@1.3.0" data-semver="1.3.0" src="https://code.angularjs.org/1.3.0/angular.js"></script>
    <script data-require="jquery@@*" data-semver="2.0.3" src="http://code.jquery.com/jquery-2.0.3.min.js"></script>
    <script data-require="bootstrap@3.1.1" data-semver="3.1.1" src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="style.css" />
    <script>
    var myApp = angular.module('myApp', ['angularUtils.directives.dirPagination']);
    function MyController($scope, $http, personService) {
        $scope.staffData = null;

        personService.GetAllRecords().then(function (d) {

            $scope.staffData = d.data; // Success
            $scope.currentPage = 1;
            $scope.pageSize = 10;


            // Delete product details
            $scope.delete = function () {

                var index = document.getElementById('hiddenVal').value;
                var id = document.getElementById('hiddenValId').value;

                $http({
                    method: 'Post',
                    url: '/XpanelAdmin/Delete/' + id,
                }).then(function successCallback(response) {

                    $scope.personData.splice(index, 1);
                    document.getElementById('success').style.display = "block";
                    $('#dialog-confirm').css("display", "none");
                }, function errorCallback(response) {
                    alert("Error : " + response.data.ExceptionMessage);
                });


            };

            $scope.deletepopup = function (index, id) {

                $('#hiddenVal').val(index);

                $('#hiddenValId').val(id);



                $('#dialog-confirm').css("display", "block");

            }
            $scope.cancel = function (index) {


                $('#dialog-confirm').css("display", "none");
            }


            $scope.person = {
                Id: 0,
                firstname: '',
                lastname: '',
                emailid: '',
                gender: '',
                address1: '',
                address2: '',
                city: '',
                state: '',
                zipcode: '',
                passwordhash: '',
                index: true,
                VisibleInsert: false,
                MessageError: '',
                MessageSuccess: '',
                Error: '',
                Success: ''
            }
            $scope.Edit = function (index, id) {

                window.location.href = '../XpanelAdmin/UserProfile?id=' + id;
                //var myindex = 0;
                //for (var i = 0; i < $scope.personData.length; i++) {
                //    if (id == $scope.personData[i].id) {
                //        myindex = i;
                //    }
                //}
                //$scope.person = {
                //    Id: $scope.personData[myindex].id,
                //    firstname: $scope.personData[myindex].firstname,
                //    lastname: $scope.personData[myindex].lastname,
                //    email: $scope.personData[myindex].email,
                //    gender: "" +$scope.personData[myindex].gender,
                //    dateofbirth: new Date(parseInt($scope.personData[myindex].dateofbirth.replace(/(^.*\()|([+-].*$)/g, ''))).toLocaleDateString(),
                //    phone1: $scope.personData[myindex].phone1,
                //    address: $scope.personData[myindex].address,
                //    address1: $scope.personData[myindex].address1,
                //    city: $scope.personData[myindex].city,
                //    state: $scope.personData[myindex].state,
                //    zipcode: $scope.personData[myindex].zipcode
                //};

                //if($scope.person.phone1=="0")
                //{
                //    $scope.person.phone1 = "";
                //}
                //if ($scope.person.zipcode == "0") {
                //    $scope.person.zipcode = "";
                //}
                //$scope.person.VisibleInsert = true;


            }


            function CheckValidationforsave() {

                var IsError = true;
                $scope.person.MessageError = '';
                if ($scope.person.firstname == "") {
                    IsError = false;


                }
                if ($scope.person.lastname == "") {
                    IsError = false;


                } if ($('#DateOfBirth').val() == "") {
                    IsError = false;


                } if ($scope.person.phone1 == "") {
                    IsError = false;


                }
                if ($('#Gender').val() == "") {
                    IsError = false;


                }
                if ($scope.person.address == "") {
                    IsError = false;


                }

                if ($scope.person.city == "") {
                    IsError = false;
                }
                if ($('#State').val() == "") {
                    IsError = false;


                }
                if ($scope.person.zipcode == "") {
                    IsError = false;


                }
                if ($scope.person.email == "") {
                    IsError = false;


                }
                else {
                    if (/^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test($('#txtemail').val())) {

                    }
                    else {
                        $scope.person.MessageError = $scope.person.MessageError + " Email is invalid.";
                        IsError = false;

                    }


                }

                return IsError;


            }

            $scope.Cancel = function () {


                $scope.person.index = true;
                $scope.person.VisibleInsert = false;

            }


            $scope.Update = function () {
                $scope.person.Error = false;
                if (CheckValidationforsave()) {

                    $http({

                        method: 'POST',
                        url: '/XpanelAdmin/UpdatePerson',
                        data: $scope.person
                    }).then(function successCallback(response) {
                        personService.GetAllRecords().then(function (d) {
                            $scope.personData = d.data;
                        });
                        $scope.person.MessageSuccess = "  Record Update Successfully.";
                        $scope.person.Success = true;
                        $scope.person.index = true;
                        $scope.person.VisibleInsert = false;


                    },
                    function errorCallback(response) {

                        alert("Error : " + response.data.ExceptionMessage);
                    });

                }
                else {

                    $scope.person.MessageError = $scope.person.MessageError + "  Please Fix Validations.";
                    $scope.person.Error = true;

                }


            }




            $scope.Cancel = function () {
                $scope.person.index = true;
                $scope.person.VisibleInsert = false;
            }





            $scope.ChangeStatus = function (id, status) {


                $http
                    ({
                        method: 'Post',
                        url: '/XpanelAdmin/ChangeStatus?id=' + id + "&status=" + status,
                    }).then(function successCallback(response) {
                        personService.GetAllRecords().then(function (d) {
                            $scope.personData = d.data;
                        });
                        $scope.person.MessageSuccess = $scope.person.MessageError + "  Record Updated Successfully."
                        $scope.person.Success = true;


                    }, function errorCallback(response) {
                        alert("Error : " + response.data.ExceptionMessage);
                    });


            }

            $scope.exporttoexcel = function () {
                alasql.fn.datetime = function (dateStr) {
                    var date = new Date(parseInt(dateStr.replace(/(^.*\()|([+-].*$)/g, ''))).toLocaleDateString();
                    if (date.toLocaleString() == 'Invalid Date') {
                        return '';
                    }
                    return date.toLocaleString();
                };
                alasql.fn.validGender = function (genderStr) {
                    var retVal = '';
                    if (genderStr == '1') {
                        retVal = 'Male';
                    } else if (genderStr == '2') {
                        retVal = 'Female';
                    } else {
                        retVal = 'Transgender';
                    }
                    return retVal;
                };
                alasql('SELECT firstname as FirstName,lastname as LastName,datetime(dateofbirth) as [Date OF Birth],validGender(gender) as Gender,email as Email,phone1 as Phone1,active as Active,address as [Address1],address1 as [Address2],zipcode as ZipCode,state as State,city as City INTO XLSX("PatientList.xlsx",{headers:true}) FROM ?', [$scope.personData]);
            };





        }
        )
    }
    myApp.factory('personService', function ($http) {
        var fac = {};
        fac.GetAllRecords = function () {

            return $http.get('/XpanelAdmin/staffData');
        }
        return fac;
    });
    function OtherController($scope) {
        $scope.pageChangeHandler = function (num) {
            console.log('going to page ' + num);
        };
    }

    myApp.controller('MyController', MyController);
    myApp.controller('OtherController', OtherController);


    </script>
    <script src="~/Scripts/dirPagination.js"></script>
 
</head>



<body>
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div ng-controller="MyController" class="my-controller">
                    <h1>Tasty Paginated Menu</h1>

                    <small>this is in "MyController"</small>


                    <div class="row">
                        <div class="col-xs-4">
                            <h3>Meals Page: {{ currentPage }}</h3>
                        </div>
                        <div class="col-xs-4">
                            <label for="search">Search:</label>
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                        <div class="col-xs-4">
                            <label for="search">items per page:</label>
                            <input type="number" min="1" max="100" class="form-control" ng-model="pageSize">
                        </div>
                    </div>
                    <br>
                    <div class="panel panel-default">
                        <div class="panel-body">

                            <ul>
                                <li dir-paginate="user in staffData | filter:q | itemsPerPage: pageSize" current-page="currentPage">{{ user.emailid }}</li>

                            </ul>
                        </div>
                    </div>
                </div>

                <div ng-controller="OtherController" class="other-controller">
                    <small>this is in "OtherController"</small>
                    <div class="text-center">
                        <dir-pagination-controls boundary-links="true" on-page-change="pageChangeHandler(newPageNumber)">


                            <ul class="pagination" ng-if="1 < pages.length || !autoHide">
                                <li ng-if="boundaryLinks" ng-class="{ disabled : pagination.current == 1 }">
                                    <a href="" ng-click="setCurrent(1)">&laquo;</a>
                                </li>
                                <li ng-if="directionLinks" ng-class="{ disabled : pagination.current == 1 }">
                                    <a href="" ng-click="setCurrent(pagination.current - 1)">&lsaquo;</a>
                                </li>
                                <li ng-repeat="pageNumber in pages track by tracker(pageNumber, $index)" ng-class="{ active : pagination.current == pageNumber, disabled : pageNumber == '...' }">
                                    <a href="" ng-click="setCurrent(pageNumber)">{{ pageNumber }}</a>
                                </li>
                                <li ng-if="directionLinks" ng-class="{ disabled : pagination.current == pagination.last }">
                                    <a href="" ng-click="setCurrent(pagination.current + 1)">&rsaquo;</a>
                                </li>
                                <li ng-if="boundaryLinks" ng-class="{ disabled : pagination.current == pagination.last }">
                                    <a href="" ng-click="setCurrent(pagination.last)">&raquo;</a>
                                </li>
                            </ul>


                        </dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

</html>











